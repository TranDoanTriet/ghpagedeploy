# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17.0]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build the project
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Configure git for deployment
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Deploy to GitHub Pages
      run: npm run deploy -- -u "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.17.0]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js 
#       uses: actions/setup-node@v3
#       with:
#         node-version: 
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test

#     - name: deploy page
#       run: 
#         git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
#         npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
#       env:
#         GITHUB_TOKEN: ${(secrets.GITHUB_TOKEN)}
